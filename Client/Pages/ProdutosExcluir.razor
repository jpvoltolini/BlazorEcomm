@page "/ProdutosExcluir"
@using Microsoft.AspNetCore.Components.Forms
@using BlazorEcomm.Shared.Models
@inject HttpClient httpClient



<h3>Excluir Produto</h3>
<div class="shadow p-3">

    <label>
        Id do Produto
        <InputNumber class="form-control" @bind-Value="id">

        </InputNumber>
        <br />

        <button class="btn btn-primary me-2" @onclick="Consultar">
            Consultar
        </button>

    </label>
    <br />
    <hr />
    <br />
    <p>@msg</p>


    <EditForm Model="produto" OnSubmit="Excluir" class="d-flex flex-column">

        <label>
            ID do Produto:
            <InputNumber class="form-check" @bind-Value="produto.Id" disabled="true"></InputNumber>
            <br />
        </label>

        <label>
            Nome:
            <InputText class="form-control" @bind-Value="produto.Nome" disabled="true"></InputText>
            <br />
        </label>

        <label>
            Preço:
            <InputNumber class="form-control" @bind-Value="produto.Preco" disabled="true"></InputNumber>
            <br />
        </label>

        <label>
            Quantidade:
            <InputNumber class="form-control" @bind-Value="produto.Quantidade" disabled="true"></InputNumber>
            <br />
        </label>

        <label>
            Imagem:
            <InputTextArea class="form-control" @bind-Value="produto.Imagem" disabled="true"></InputTextArea>
            <br />
        </label>

        <div class="mt-2">
            <button class="btn btn-danger" type="submit">
                Excluir
            </button>
        </div>
    </EditForm>




</div>

@code {
    int id;


    string msg = "";
    Produto produto = new();

    protected async Task Consultar()
    {
        string api = $"api/produtos/consultar/{id}";
        var response = await httpClient.GetAsync(api);

        if (!response.IsSuccessStatusCode)
        {
            msg = await response.Content.ReadAsStringAsync();
            produto = new();
        } else
        {
            produto = await response.Content.ReadFromJsonAsync<Produto>();
        }
    }


    protected async Task Excluir()
    {
        if (produto == null)
        {
            msg = "Produto não encontrado.";
        }

        string api = $"api/produtos/excluir/{id}";
        HttpResponseMessage response = await httpClient.DeleteAsync(api);

        if (!response.IsSuccessStatusCode)
        {
            msg = await response.Content.ReadAsStringAsync();

            if (string.IsNullOrEmpty(msg))
            {
                msg = "Não foi possivel acessar a API";
            }
        } else
        {
            msg = "Produto excuído com sucesso.";
            produto = new();
        }

    }
}
